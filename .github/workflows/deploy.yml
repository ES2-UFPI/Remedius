# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["Teste-CI"]
  pull_request:
    branches: ["Teste-CI"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/


    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: sudo apt-get install docker-compose

      - name: Start database with Docker Compose
        run: docker compose up -d

      - name: Wait for database to be ready
        run: |
          while ! nc -z localhost 5432; do
            echo "Waiting for database..."
            sleep 2
          done

      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        working-directory: ./backend
        run: mvn -B package --file pom.xml

      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci # Install dependencies cleaning node modules
      - run: npm run build --if-present
      - run: npm test 
